{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","storeInputData","event1","setState","formInputData","target","value","storeFinalData","storeData","state","deleteStoreData","event2","tempData","window","confirm","splice","Number","id","className","type","placeholder","onKeyUp","inputEvent","onClick","this","map","item","index","deleteEvent","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MA0EeA,E,kDAvEb,aAAe,IAAD,8BACZ,gBAQFC,eAAe,SAACC,GACd,EAAKC,SAAS,CACZC,cAAcF,EAAOG,OAAOC,SAXlB,EAehBC,eAAe,WACb,EAAKJ,SAAS,CACZK,UAAU,GAAD,mBAAK,EAAKC,MAAMD,WAAhB,CAA0B,EAAKC,MAAML,mBAjBlC,EAqBhBM,gBAAgB,SAACC,GACf,IAAIC,EAAS,EAAKH,MAAMD,UACa,GAAhCK,OAAOC,QAAQ,kBACdF,EAASG,OAAOC,OAAOL,EAAON,OAAOY,IAAI,GACzC,EAAKd,SAAS,CACZK,UAAUI,MAvBhB,EAAKH,MAAQ,CACV,cAAgB,GAChB,UAAY,IALH,E,0CA8Bd,WAAU,IAAD,OACP,OACE,sBAAKS,UAAU,MAAf,UAEE,qBAAKA,UAAU,qBAAf,SACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,iCACI,uBAAOC,KAAK,OAAOD,UAAU,eAC3BE,YAAY,aAAaC,QAAS,SAACC,GAAc,EAAKrB,eAAeqB,MACrE,uBACF,wBAAQH,KAAK,SAASD,UAAU,kBAAkBK,QAASC,KAAKjB,eAAhE,+BAMR,qBAAKW,UAAU,qBAAf,SACA,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACI,oBAAIA,UAAU,aAAd,SACGM,KAAKf,MAAMD,UAAUiB,KAAI,SAACC,EAAKC,GAAN,OACxB,qBAAIT,UAAU,kBAAd,UAA6CQ,EAC7C,wBAAQR,UAAU,iBAAiBD,GAAIU,EACvCJ,QAAS,SAACK,GACR,EAAKlB,gBAAgBkB,IAFvB,2BADqCD,qB,GArDrCE,aCUHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36fd5802.chunk.js","sourcesContent":[" import React, { Component } from 'react'\n\nclass App extends Component {\n  constructor() {\n    super()\n  \n    this.state = {\n       \"formInputData\":\"\",\n       \"storeData\":[]\n    }\n  }\n  \n  storeInputData=(event1)=>{\n    this.setState({\n      formInputData:event1.target.value\n      \n    })\n  }\nstoreFinalData=()=>{\n  this.setState({\n    storeData:[...this.state.storeData,this.state.formInputData]\n  })\n}\n\ndeleteStoreData=(event2)=>{\n  var tempData=this.state.storeData;\n    if(window.confirm(\"Are You Sure\")==true){   \n        tempData.splice(Number(event2.target.id),1)\n        this.setState({\n          storeData:tempData\n        })\n    }\n}\n  render() {\n    return (\n      <div className=\"row\">\n        {/* First column */}\n        <div className=\"col-lg-5 col-md-10\">\n        <div className=\"card-mt-3\">\n          <div className=\"card-body\">\n            <form> \n                <input type=\"text\" className=\"form-control\" \n                  placeholder=\"Add-data..\" onKeyUp={(inputEvent)=>{this.storeInputData(inputEvent)}}\n                /><br/>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.storeFinalData}>Add-Data</button>\n            </form>\n          </div>\n        </div>  \n        </div>\n        {/* Second column */}\n        <div className=\"col-lg-5 col-md-10\">\n        <div className=\"card-mt-3\">\n          <div className=\"card-body\">\n              <ul className=\"list-group\">\n                {this.state.storeData.map((item,index)=>(\n                  <li className=\"list-group-item\" key={index}>{item}\n                  <button className=\"btn btn-danger\" id={index} \n                  onClick={(deleteEvent)=>{\n                    this.deleteStoreData(deleteEvent)\n                  }}>Delete karo</button>\n                  </li>\n                ))}\n              </ul>\n          </div>\n          </div>\n      </div>\n      </div>\n\n        \n\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}